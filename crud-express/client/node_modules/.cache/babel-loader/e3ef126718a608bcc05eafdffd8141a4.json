{"ast":null,"code":"import _defineProperty from \"/home/yash/bancacy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/yash/bancacy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/yash/bancacy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/yash/bancacy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/yash/bancacy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/yash/bancacy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/yash/bancacy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/yash/bancacy/client/src/components/user/Update.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { updateUser } from \"../../actions/userActions\";\nimport TextFieldGroup from \"../common/TextFieldGroup\";\n\nvar Update =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Update, _Component);\n\n  function Update() {\n    var _this;\n\n    _classCallCheck(this, Update);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Update).call(this));\n    _this.state = {\n      username: \"\",\n      userjob: \"\",\n      errors: {}\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Update, [{\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      e.preventDefault();\n\n      if (this.validateForm()) {\n        var newUser = {\n          name: this.state.username,\n          job: this.state.userjob\n        };\n        this.setState({\n          username: \"\",\n          userjob: \"\"\n        });\n        this.props.updateUser(newUser);\n      }\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm() {\n      var fields = this.state;\n      var errors = {};\n      var formIsValid = true;\n\n      if (!fields[\"username\"]) {\n        formIsValid = false;\n        errors[\"username\"] = \"*Please enter your username.\";\n      }\n\n      if (typeof fields[\"username\"] !== \"undefined\") {\n        if (!fields[\"username\"].match(/^[a-zA-Z ]*$/)) {\n          formIsValid = false;\n          errors[\"username\"] = \"*Please enter alphabet characters only.\";\n        }\n      }\n\n      if (!fields[\"userjob\"]) {\n        formIsValid = false;\n        errors[\"userjob\"] = \"*Please enter your job.\";\n      }\n\n      if (typeof fields[\"userjob\"] !== \"undefined\") {\n        if (!fields[\"userjob\"].match(/^[a-zA-Z ]*$/)) {\n          formIsValid = false;\n          errors[\"userjob\"] = \"*Please enter alphabet characters only.\";\n        }\n      }\n\n      this.setState({\n        errors: errors\n      });\n      return formIsValid;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var errors = this.state.errors;\n      var updatedAt = this.state.updatedAt;\n      var success;\n\n      if (updatedAt) {\n        success = React.createElement(\"div\", {\n          class: \"alert alert-success\",\n          role: \"alert\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, \"Updation successful  on \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, new Date(this.state.updatedAt).toDateString()), \" At \\xA0\", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, new Date(this.state.updatedAt).getHours(), \" : \", new Date(this.state.updatedAt).getMinutes(), \" \"));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"register\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, success, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-8 m-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"display-4 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Update\"), React.createElement(\"p\", {\n        className: \"lead text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Update the Values\"), React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(TextFieldGroup, {\n        type: \"text\",\n        placeholder: \"Enter Name\",\n        name: \"username\",\n        value: this.state.username,\n        onChange: this.onChange,\n        error: errors.username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(TextFieldGroup, {\n        type: \"text\",\n        placeholder: \"Enter Job\",\n        name: \"userjob\",\n        value: this.state.userjob,\n        onChange: this.onChange,\n        error: errors.userjob,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-info btn-block mt-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }))))));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      console.log(nextProps);\n\n      if (Object.keys(nextProps.errors).length > 0) {\n        return {\n          errors: nextProps.errors\n        };\n      } else if (nextProps.user.data) {\n        return nextProps.user.data;\n      }\n\n      return null;\n    }\n  }]);\n\n  return Update;\n}(Component);\n\nUpdate.propTypes = {\n  updateUser: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user,\n    errors: state.errors\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateUser: updateUser\n})(Update);","map":{"version":3,"sources":["/home/yash/bancacy/client/src/components/user/Update.js"],"names":["React","Component","PropTypes","connect","updateUser","TextFieldGroup","Update","state","username","userjob","errors","onChange","bind","onSubmit","e","setState","target","name","value","preventDefault","validateForm","newUser","job","props","fields","formIsValid","match","updatedAt","success","Date","toDateString","getHours","getMinutes","nextProps","prevState","console","log","Object","keys","length","user","data","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { updateUser } from \"../../actions/userActions\";\nimport TextFieldGroup from \"../common/TextFieldGroup\";\n\nclass Update extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      userjob: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    console.log(nextProps);\n    if (Object.keys(nextProps.errors).length > 0) {\n      return { errors: nextProps.errors };\n    }\n    else if (nextProps.user.data) {\n      return nextProps.user.data;\n    }\n\n    return null;\n  }\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  onSubmit(e) {\n    e.preventDefault();\n    if (this.validateForm()) {\n      const newUser = {\n        name: this.state.username,\n        job: this.state.userjob\n      };\n      this.setState({\n        username: \"\",\n        userjob: \"\"\n      });\n      this.props.updateUser(newUser);\n\n    }\n  }\n  validateForm() {\n\n    let fields = this.state;\n    let errors = {};\n    let formIsValid = true;\n\n    if (!fields[\"username\"]) {\n      formIsValid = false;\n      errors[\"username\"] = \"*Please enter your username.\";\n    }\n\n    if (typeof fields[\"username\"] !== \"undefined\") {\n      if (!fields[\"username\"].match(/^[a-zA-Z ]*$/)) {\n        formIsValid = false;\n        errors[\"username\"] = \"*Please enter alphabet characters only.\";\n      }\n    }\n    if (!fields[\"userjob\"]) {\n      formIsValid = false;\n      errors[\"userjob\"] = \"*Please enter your job.\";\n    }\n\n    if (typeof fields[\"userjob\"] !== \"undefined\") {\n      if (!fields[\"userjob\"].match(/^[a-zA-Z ]*$/)) {\n        formIsValid = false;\n        errors[\"userjob\"] = \"*Please enter alphabet characters only.\";\n      }\n    }\n    this.setState({\n      errors: errors\n    });\n    return formIsValid;\n  }\n\n  render() {\n    const { errors } = this.state;\n    const updatedAt = this.state.updatedAt;\n    let success;\n    if (updatedAt) {\n      success = <div class=\"alert alert-success\" role=\"alert\">\n        Updation successful  on <strong>{new Date(this.state.updatedAt).toDateString()}</strong> At\n       &nbsp;<strong>{new Date(this.state.updatedAt).getHours()} : {new Date(this.state.updatedAt).getMinutes()} </strong>\n      </div>\n\n    }\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n\n          {success}\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Update</h1>\n              <p className=\"lead text-center\">Update the Values</p>\n              <form onSubmit={this.onSubmit}>\n                <TextFieldGroup\n                  type=\"text\"\n                  placeholder=\"Enter Name\"\n                  name=\"username\"\n                  value={this.state.username}\n                  onChange={this.onChange}\n                  error={errors.username}\n                />\n                <TextFieldGroup\n                  type=\"text\"\n                  placeholder=\"Enter Job\"\n                  name=\"userjob\"\n                  value={this.state.userjob}\n                  onChange={this.onChange}\n                  error={errors.userjob}\n                />\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nUpdate.propTypes = {\n  updateUser: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  user: state.user,\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { updateUser }\n)(Update);\n"]},"metadata":{},"sourceType":"module"}